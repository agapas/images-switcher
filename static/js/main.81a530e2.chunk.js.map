{"version":3,"sources":["images/primary/1.jpg","images/secondary/1.jpg","images/primary/2.jpg","images/secondary/2.jpg","images/primary/3.jpg","images/secondary/3.jpg","images/primary/4.jpg","images/secondary/4.jpg","images/primary/5.jpg","images/secondary/5.jpg","images/primary/6.jpg","images/secondary/6.jpg","components/OnScrollImage.js","components/OnMouseOverImage.js","components/OnTouchImage.js","components/ImagesContent.js","components/ToggleSwitch.js","components/ImagesController.js","components/ImagesSource.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","OnScrollImage","primaryImg","secondaryImg","imageRef","useRef","useState","isLoading","setIsLoading","inView","setInView","scrollHandler","useCallback","isInView","useEffect","window","addEventListener","removeEventListener","current","rect","getBoundingClientRect","top","bottom","innerHeight","ref","src","alt","style","opacity","OnMouseOverImage","currentImg","setCurrentImg","onMouseOver","onMouseOut","OnTouchImage","onTouchStart","onTouchEnd","ImagesContent","event","primaryByDefault","paths","isMobile","EventComponent","primaryIndex","secondaryIndex","getIndexes","className","map","p","i","key","ToggleSwitch","checked","label","onChange","id","type","background","htmlFor","ImagesController","scrollingChecked","setScrollingChecked","allImagesChecked","setAllImagesChecked","setPrimaryByDefault","Math","max","document","documentElement","clientWidth","innerWidth","mouseOverOrTouchEvent","fromEvent","toEvent","ImagesSource","source","href","require","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81a530e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.70eeeb45.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.1e921e25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.1c28f435.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.75eb8430.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.a3ad066f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.6b16d480.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.78bec073.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.d2a72859.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.99d0d97b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.43825f80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.c41e052a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.7ff0b466.jpg\";","import React, { useRef, useEffect, useCallback, useState } from \"react\";\r\n\r\nconst OnScrollImage = ({ primaryImg, secondaryImg }) => {\r\n    // using useRef here is just for practicing React Hooks\r\n    const imageRef = useRef(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inView, setInView] = useState(false);\r\n\r\n    const scrollHandler = useCallback(() => {\r\n        setInView(() => {\r\n            return isInView();\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", scrollHandler);\r\n        setInView(isInView());\r\n        setIsLoading(false);\r\n        return (() => {\r\n            window.removeEventListener(\"scroll\", scrollHandler);\r\n        });\r\n    }, [isLoading, scrollHandler]);\r\n\r\n    const isInView = () => {\r\n        if (imageRef.current) {\r\n            const rect = imageRef.current.getBoundingClientRect();\r\n            return rect.top >= 0 && rect.bottom <= window.innerHeight;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return isLoading ? null : (\r\n        <img\r\n            ref={imageRef}\r\n            src={inView ? secondaryImg : primaryImg}\r\n            alt=\"\"\r\n            style={{ opacity: inView ? 1 : 0.5 }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default OnScrollImage;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nconst OnMouseOverImage = ({ primaryImg, secondaryImg }) => {\r\n    const imageRef = useRef(null);\r\n    const [currentImg, setCurrentImg] = useState(primaryImg);\r\n    return (\r\n        <img\r\n            ref={imageRef}\r\n            current={currentImg}\r\n            src={primaryImg}\r\n            onMouseOver={() => {\r\n                setCurrentImg(secondaryImg);\r\n                imageRef.current.src = secondaryImg;\r\n            }}\r\n            onMouseOut={() => {\r\n                setCurrentImg(primaryImg);\r\n                imageRef.current.src = primaryImg\r\n            }}\r\n            alt=\"\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default OnMouseOverImage;\r\n","import React, { useRef, useState } from \"react\";\r\n\r\nconst OnTouchImage = ({ primaryImg, secondaryImg }) => {\r\n    const imageRef = useRef(null);\r\n    const [currentImg, setCurrentImg] = useState(primaryImg);\r\n    return (\r\n        <img\r\n            ref={imageRef}\r\n            current={currentImg}\r\n            src={primaryImg}\r\n            onTouchStart={() => {\r\n                setCurrentImg(secondaryImg);\r\n                imageRef.current.src = secondaryImg;\r\n            }}\r\n            onTouchEnd={() => {\r\n                setCurrentImg(primaryImg);\r\n                imageRef.current.src = primaryImg\r\n            }}\r\n            alt=\"\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default OnTouchImage;\r\n","import React from \"react\";\r\nimport OnScrollImage from \"./OnScrollImage\";\r\nimport OnMouseOverImage from \"./OnMouseOverImage\";\r\nimport OnTouchImage from \"./OnTouchImage\";\r\n\r\nexport const getIndexes = (primaryByDefault) => {\r\n    const primaryIndex = primaryByDefault ? 0 : 1;\r\n    const secondaryIndex = primaryByDefault ? 1 : 0;\r\n    return { primaryIndex, secondaryIndex };\r\n};\r\n\r\nconst ImagesContent = ({ event, primaryByDefault, paths, isMobile }) => {\r\n    const EventComponent = event === \"scrolling\"\r\n        ? OnScrollImage\r\n        : isMobile\r\n            ? OnTouchImage\r\n            : OnMouseOverImage;\r\n    const { primaryIndex, secondaryIndex } = getIndexes(primaryByDefault);\r\n    return (\r\n        <div className=\"images-content\">\r\n            {paths.map((p, i) => {\r\n                return <EventComponent key={i} primaryImg={p[primaryIndex]} secondaryImg={p[secondaryIndex]} alt=\"\" />;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImagesContent;\r\n","import React from \"react\";\r\n\r\nconst ToggleSwitch = ({ checked, label, className, onChange }) => {\r\n    const id = `checkbox-${className}`;\r\n    return (\r\n        <div className={`toggle-switch ${className}`}>\r\n            <input\r\n                id={id}\r\n                type=\"checkbox\"\r\n                checked={checked}\r\n                onChange={onChange}\r\n            />\r\n            <label\r\n                style={{ background: checked && \"darkgrey\" }}\r\n                className=\"switch-button-back\"\r\n                htmlFor={id}\r\n            >\r\n                <span className=\"switch-button\" />\r\n            </label>\r\n            <label className=\"switch-label\">{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToggleSwitch;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ImagesContent from \"./ImagesContent\";\r\nimport ToggleSwitch from \"./ToggleSwitch\";\r\n\r\nconst isMobileSize = () => {\r\n  const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n  return w < 480;\r\n};\r\n\r\nconst ImagesController = ({ paths }) => {\r\n  const [scrollingChecked, setScrollingChecked] = useState(false);\r\n  const [allImagesChecked, setAllImagesChecked] = useState(false);\r\n  // const [primaryByDefault, setPrimaryByDefault] = useState(true);\r\n  const [primaryByDefault, setPrimaryByDefault] = useState(false);\r\n\r\n  // useEffect is used here just for practicing React Hooks\r\n  // to skip it enable line 13\r\n  useEffect(() => setPrimaryByDefault(true), []);\r\n\r\n  const isMobile = isMobileSize();\r\n  const mouseOverOrTouchEvent = isMobile ? \"touch\" : \"mouse over\";\r\n  const fromEvent = scrollingChecked ? \"scrolling\" : mouseOverOrTouchEvent;\r\n  const toEvent = scrollingChecked ? mouseOverOrTouchEvent : \"scrolling\";\r\n\r\n  const onChangeAllImages = () => {\r\n    setAllImagesChecked(!allImagesChecked);\r\n    setPrimaryByDefault(!primaryByDefault)\r\n  }\r\n\r\n  const onChangeEvent = () => {\r\n    setScrollingChecked(!scrollingChecked);\r\n  }\r\n\r\n  return (\r\n    <div className={`images-controller ${isMobile ? \"mobile\" : \"\"}`}>\r\n      <div className=\"toggles\">\r\n        <ToggleSwitch\r\n          key=\"all-images\"\r\n          checked={allImagesChecked}\r\n          className=\"switch-all-images\"\r\n          label=\"Switch all images\"\r\n          onChange={onChangeAllImages}\r\n        />\r\n        <ToggleSwitch\r\n          key=\"event\"\r\n          checked={scrollingChecked}\r\n          className=\"switch-event\"\r\n          label={`Switch ${fromEvent} event to ${toEvent}`}\r\n          onChange={onChangeEvent}\r\n        />\r\n      </div>\r\n      <ImagesContent event={fromEvent} primaryByDefault={primaryByDefault} paths={paths} isMobile={isMobile} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagesController;\r\n","import React from \"react\";\r\n  \r\nconst ImagesSource = ({ source }) => (\r\n    <div className=\"images-source\">\r\n      Source of images:\r\n      <a href={source}>{source}</a>\r\n    </div>\r\n);\r\n\r\nexport default ImagesSource;\r\n","import React from 'react';\nimport 'App.css';\nimport ImagesController from \"components/ImagesController\";\nimport ImagesSource from \"components/ImagesSource\";\n\nexport const paths = [\n  [require('./images/primary/1.jpg'), require('./images/secondary/1.jpg')],\n  [require('./images/primary/2.jpg'), require('./images/secondary/2.jpg')],\n  [require('./images/primary/3.jpg'), require('./images/secondary/3.jpg')],\n  [require('./images/primary/4.jpg'), require('./images/secondary/4.jpg')],\n  [require('./images/primary/5.jpg'), require('./images/secondary/5.jpg')],\n  [require('./images/primary/6.jpg'), require('./images/secondary/6.jpg')],\n];\n\nexport const imagesSource = \"https://pixabay.com/\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <ImagesController paths={paths} />\n      <ImagesSource source={imagesSource} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}